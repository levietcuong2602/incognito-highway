// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import grpc "google.golang.org/grpc"
import mock "github.com/stretchr/testify/mock"
import peer "github.com/libp2p/go-libp2p-core/peer"

// Dialer is an autogenerated mock type for the Dialer type
type Dialer struct {
	mock.Mock
}

// Dial provides a mock function with given fields: ctx, peerID, dialOpts
func (_m *Dialer) Dial(ctx context.Context, peerID peer.ID, dialOpts ...grpc.DialOption) (*grpc.ClientConn, error) {
	_va := make([]interface{}, len(dialOpts))
	for _i := range dialOpts {
		_va[_i] = dialOpts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, peerID)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *grpc.ClientConn
	if rf, ok := ret.Get(0).(func(context.Context, peer.ID, ...grpc.DialOption) *grpc.ClientConn); ok {
		r0 = rf(ctx, peerID, dialOpts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*grpc.ClientConn)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, peer.ID, ...grpc.DialOption) error); ok {
		r1 = rf(ctx, peerID, dialOpts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
